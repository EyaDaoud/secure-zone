from flask import Flask, request
import serial
import threading

# Configuration du port s√©rie
try:
    ser = serial.Serial('COM5', 9600, timeout=1)  # ‚ö†Ô∏è remplace COM5 par le port r√©el de ta STM32
    print("‚úÖ Port s√©rie ouvert :", ser.port)
except Exception as e:
    print("‚ùå Erreur d'ouverture du port s√©rie :", e)
    ser = None

# Cr√©ation de l'application Flask
app = Flask(__name__)

@app.route('/send', methods=['POST'])
def recevoir_donnees():
    if not ser:
        return "‚ùå Port s√©rie non disponible", 500

    try:
        json_data = request.get_json()
        contenu = json_data.get("data", "")

        print("\nüì• Donn√©es re√ßues depuis la page web :")
        print(contenu)

        # Envoie les lignes au STM32 via UART
        for ligne in contenu.strip().split('\n'):
            ser.write((ligne + '\n').encode())
            print(f"üì§ Envoy√© √† la STM32 : {ligne}")

        return "‚úÖ Coordonn√©es envoy√©es √† la STM32"
    except Exception as e:
        return f"‚ùå Erreur : {str(e)}", 500

# Lancement du serveur Flask sur le por
